#!/bin/bash -login

#SBATCH --time=00:15:00
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=8
#SBATCH --mem=32G
#SBATCH --job-name 3bowtie2

cd ${SLURM_SUBMIT_DIR}
cores=$SLURM_CPUS_PER_TASK
RAM=$SLURM_MEM_PER_NODE

echo -e "Cecilia v.1.0 - usearCh basEd ampliCon pIpeLine for Illumina dAta
MIT LICENSE - Copyright Â© 2022 Gian M.N. Benucci, Ph.D.
email: benucci[at]msu[dot]edu\n"

source ../config.yaml

echo -e "\n Running script: 03_removePhix-bowtie2.sb \n"

echo -e "\n========== Sub-directories ==========\n"
if [ -d $project_dir/outputs/03_removePhix_bowtie2/ ]; then
	echo -e "\n Directory exist! I performed this step already. Exiting... \n"
else	
	echo "mkdir $project_dir/outputs/03_removePhix_bowtie2/"; mkdir $project_dir/outputs/03_removePhix_bowtie2/
	echo "cd $project_dir/rawdata/"; cd $project_dir/rawdata/

	conda activate bowtie2
	echo -e "Bowtie2 version: `bowtie2 --version`"

	if [[ "$R1" == "yes" ]] && [[ "$R2" == "yes" ]]; then	
			cd $project_dir/rawdata/

			ls *_R[12].fastq > bowtie2.list

			while read R1
			do read R2
				echo -e "\n========== stats for file: $R1 ==========\n"
				bowtie2 \
				-x $phix_db \
				-1 $R1 \
				-2 $R2 \
				--threads $cores \
				--un-conc $project_dir/outputs/03_removePhix_bowtie2/${R1//.fastq/_nophix.fastq} \
				-S $project_dir/outputs/03_removePhix_bowtie2/${R1//.fastq/_contaminated.sam} \
				--local
			done < bowtie2.list

	elif [[ "$R1" == "yes" ]] && [[ "$R2" == "no" ]]; then
			cd $project_dir/rawdata/
			for file in *_R1.fastq; do
			bowtie2 \
				-x $phix_db \
				-U $file \
				--threads $cores \
				--un $project_dir/outputs/03_removePhix_bowtie2/${file//.fastq/_nophix.fastq} \
				-S $project_dir/outputs/03_removePhix_bowtie2/${file//.fastq/_contaminated.sam} \
				--local
			done

	elif [[ "$R1" == "no" ]] && [[ "$R2" == "yes" ]]; then
			cd $project_dir/rawdata/
			for file in *_R2.fastq; do
			bowtie2 \
				-x $phix_db \
				-U $file \
				--threads $cores \
				--un $project_dir/outputs/03_removePhix_bowtie2/${file//.fastq/_nophix.fastq} \
				-S $project_dir/outputs/03_removePhix_bowtie2/${file//.fastq/_contaminated.sam} \
				--local
			done
	fi

	conda deactivate

	rm $project_dir/outputs/03_removePhix_bowtie2/*_contaminated.sam
fi

echo -e "\n========== Rename files again to standard names R1 and R2 ==========\n"
echo "cd $project_dir/outputs/03_removePhix_bowtie2/"; cd $project_dir/outputs/03_removePhix_bowtie2/

for file in *nophix.1.fastq
do 
    [ -f "$file" ] || continue
	mv "$file" "${file//R1_nophix.1.fastq/R1_nophix.fastq}"
done 

for file in *nophix.2.fastq
do 
    [ -f "$file" ] || continue
	mv "$file" "${file//R1_nophix.2.fastq/R2_nophix.fastq}"
done 

echo -e "\n========== Counting filtered reads ==========\n"
for file in *nophix.fastq
do
	echo "$file : `echo $(cat ${file} | wc -l)/4|bc`"
done > $project_dir/outputs/03_removePhix_bowtie2/nophix.counts

echo -e "\n========== Sbatch log ==========\n"
echo -e "\n Current directory: `pwd` \n"
echo -e "\n `sacct -u benucci -j $SLURM_JOB_ID --format=JobID,JobName,Start,End,Elapsed,NCPUS,ReqMem` \n"
scontrol show job $SLURM_JOB_ID
mv $project_dir/code/slurm-$SLURM_JOB_ID* $project_dir/slurms/03_removePhix-bowtie2.slurm
